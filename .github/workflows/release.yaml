name: Create Release

on:
  push:
    branches:
      - main

jobs:
  increment_version:
    outputs:
      new_tag: ${{ steps.increment_version.outputs.new_tag }}
    runs-on: arc-runner-k8s
    steps:
    - name: Force Install GIT latest
      run: |
        sudo apt-get update
        sudo apt-get install -y software-properties-common
        sudo add-apt-repository -y ppa:git-core/ppa
        sudo apt-get update
        sudo apt-get install -y git

    - name: Checkout code
      uses: actions/checkout@v4

    - name: Fetch all tags
      run: git fetch --tags

    - name: Increment version
      id: increment_version
      run: |
        latest_tag=$(git describe --tags `git rev-list --tags --max-count=1`)
        echo "Latest tag: $latest_tag"
        new_tag="$(echo $latest_tag | awk -F. '{$NF = $NF + 1;} 1' | sed 's/ /./g')"
        echo "New tag: $new_tag"
        echo "new_tag=$new_tag" >> "$GITHUB_OUTPUT"

    - name: Push new tag
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git tag ${{ steps.increment_version.outputs.new_tag }}
        git push --tags
  release:
    needs: increment_version
    runs-on: arc-runner-k8s
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Get the version
      id: get_version
      run: echo ${{ needs.increment_version.outputs.new_tag }}

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ needs.increment_version.outputs.new_tag }}
        release_name: Release ${{ needs.increment_version.outputs.new_tag }}
        draft: false
        prerelease: false
  docker:
    needs: increment_version
    runs-on: arc-runner-k8s
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    
    - name: Set up Docker Context for Buildx
      id: buildx-context
      run: |
        docker context create builders
    
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v3
      with:
        version: latest
        endpoint: builders

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Get the version
      id: get_version
      run: |
        tag=${{ needs.increment_version.outputs.new_tag }}
        version=$(echo $tag | tr -d 'v')
        echo $version
        echo "version=$version" >> "$GITHUB_OUTPUT"

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: unipoll/website:${{ steps.get_version.outputs.version }}, unipoll/website:latest